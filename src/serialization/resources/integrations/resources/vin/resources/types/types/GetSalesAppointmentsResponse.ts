/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Keet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { ResponseStatus } from "../../../../../../common/resources/types/types/ResponseStatus";
import { VinSalesAppointment } from "./VinSalesAppointment";

export const GetSalesAppointmentsResponse: core.serialization.ObjectSchema<
    serializers.integrations.vin.GetSalesAppointmentsResponse.Raw,
    Keet.integrations.vin.GetSalesAppointmentsResponse
> = core.serialization.object({
    status: ResponseStatus,
    href: core.serialization.string(),
    first: core.serialization.string(),
    previous: core.serialization.string(),
    next: core.serialization.string(),
    limit: core.serialization.number(),
    count: core.serialization.number(),
    appointments: core.serialization.list(VinSalesAppointment),
});

export declare namespace GetSalesAppointmentsResponse {
    export interface Raw {
        status: ResponseStatus.Raw;
        href: string;
        first: string;
        previous: string;
        next: string;
        limit: number;
        count: number;
        appointments: VinSalesAppointment.Raw[];
    }
}

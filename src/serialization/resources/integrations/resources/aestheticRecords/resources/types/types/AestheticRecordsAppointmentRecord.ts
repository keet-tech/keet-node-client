/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Keet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { AestheticRecordsPatient } from "./AestheticRecordsPatient";
import { AestheticRecordsClinic } from "./AestheticRecordsClinic";
import { AestheticRecordsUser } from "./AestheticRecordsUser";
import { AestheticRecordsAppointmentExt } from "./AestheticRecordsAppointmentExt";
import { AestheticRecordsAppointmentBooking } from "./AestheticRecordsAppointmentBooking";
import { AestheticRecordsAppointmentCancellationTransaction } from "./AestheticRecordsAppointmentCancellationTransaction";
import { AestheticRecordsAppointment } from "./AestheticRecordsAppointment";

export const AestheticRecordsAppointmentRecord: core.serialization.ObjectSchema<
    serializers.integrations.aestheticRecords.AestheticRecordsAppointmentRecord.Raw,
    Keet.integrations.aestheticRecords.AestheticRecordsAppointmentRecord
> = core.serialization
    .object({
        meetingId: core.serialization.property("meeting_id", core.serialization.string().optional()),
        meetingType: core.serialization.property("meeting_type", core.serialization.string().optional()),
        invoiceId: core.serialization.property("invoice_id", core.serialization.number().optional()),
        packageId: core.serialization.property("package_id", core.serialization.number().optional()),
        bookingId: core.serialization.property("booking_id", core.serialization.number()),
        userId: core.serialization.property("user_id", core.serialization.number()),
        clinicId: core.serialization.property("clinic_id", core.serialization.number()),
        duration: core.serialization.number(),
        status: core.serialization.string(),
        type: core.serialization.string(),
        appointmentType: core.serialization.property("appointment_type", core.serialization.string()),
        patientCheckedin: core.serialization.property("patient_checkedin", core.serialization.number()),
        accepted: core.serialization.number(),
        isConfirmed: core.serialization.property("is_confirmed", core.serialization.number()),
        isReschedule: core.serialization.property("is_reschedule", core.serialization.number()),
        appointmentTimezone: core.serialization.property("appointment_timezone", core.serialization.string()),
        usersId: core.serialization.property("users_id", core.serialization.number()),
        patient: AestheticRecordsPatient.optional(),
        clinic: AestheticRecordsClinic,
        user: AestheticRecordsUser,
        appointmentServices: core.serialization.property(
            "appointment_services",
            core.serialization.list(AestheticRecordsAppointmentExt)
        ),
        procedure: core.serialization.unknown().optional(),
        appointmentBooking: core.serialization.property("appointment_booking", AestheticRecordsAppointmentBooking),
        appointmentsCheckin: core.serialization.property(
            "appointments_checkin",
            core.serialization.unknown().optional()
        ),
        appointmentCancellationTransaction: core.serialization.property(
            "appointment_cancellation_transaction",
            core.serialization.list(AestheticRecordsAppointmentCancellationTransaction)
        ),
        outOfOffice: core.serialization.property("out_of_office", core.serialization.unknown().optional()),
        color: core.serialization.string(),
        appointmentStartTime: core.serialization.property("appointment_start_time", core.serialization.string()),
        appointmentEndTime: core.serialization.property("appointment_end_time", core.serialization.string()),
        appointmentDate: core.serialization.property("appointment_date", core.serialization.string()),
    })
    .extend(AestheticRecordsAppointment);

export declare namespace AestheticRecordsAppointmentRecord {
    interface Raw extends AestheticRecordsAppointment.Raw {
        meeting_id?: string | null;
        meeting_type?: string | null;
        invoice_id?: number | null;
        package_id?: number | null;
        booking_id: number;
        user_id: number;
        clinic_id: number;
        duration: number;
        status: string;
        type: string;
        appointment_type: string;
        patient_checkedin: number;
        accepted: number;
        is_confirmed: number;
        is_reschedule: number;
        appointment_timezone: string;
        users_id: number;
        patient?: AestheticRecordsPatient.Raw | null;
        clinic: AestheticRecordsClinic.Raw;
        user: AestheticRecordsUser.Raw;
        appointment_services: AestheticRecordsAppointmentExt.Raw[];
        procedure?: unknown | null;
        appointment_booking: AestheticRecordsAppointmentBooking.Raw;
        appointments_checkin?: unknown | null;
        appointment_cancellation_transaction: AestheticRecordsAppointmentCancellationTransaction.Raw[];
        out_of_office?: unknown | null;
        color: string;
        appointment_start_time: string;
        appointment_end_time: string;
        appointment_date: string;
    }
}

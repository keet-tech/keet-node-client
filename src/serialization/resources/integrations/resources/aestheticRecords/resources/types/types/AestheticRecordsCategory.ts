/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Keet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";

export const AestheticRecordsCategory: core.serialization.ObjectSchema<
    serializers.integrations.aestheticRecords.AestheticRecordsCategory.Raw,
    Keet.integrations.aestheticRecords.AestheticRecordsCategory
> = core.serialization.object({
    id: core.serialization.number(),
    categoryName: core.serialization.property("category_name", core.serialization.string()),
    tax: core.serialization.number().optional(),
    isSystemCategory: core.serialization.property("is_system_category", core.serialization.number().optional()),
    status: core.serialization.number().optional(),
    copied: core.serialization.number().optional(),
    systemCategoryId: core.serialization.property("system_category_id", core.serialization.number().optional()),
    created: core.serialization.string().optional(),
    modified: core.serialization.string().optional(),
    catStatus: core.serialization.property("cat_status", core.serialization.number().optional()),
    isBundleCategory: core.serialization.property("is_bundle_category", core.serialization.number().optional()),
});

export declare namespace AestheticRecordsCategory {
    export interface Raw {
        id: number;
        category_name: string;
        tax?: number | null;
        is_system_category?: number | null;
        status?: number | null;
        copied?: number | null;
        system_category_id?: number | null;
        created?: string | null;
        modified?: string | null;
        cat_status?: number | null;
        is_bundle_category?: number | null;
    }
}

/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Keet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { ResponseStatus } from "../../../../../../common/resources/types/types/ResponseStatus";
import { AestheticRecordsProductPrice } from "./AestheticRecordsProductPrice";
import { AestheticRecordsPagination } from "./AestheticRecordsPagination";

export const GetAestheticRecordsProductPriceListResponse: core.serialization.ObjectSchema<
    serializers.integrations.aestheticRecords.GetAestheticRecordsProductPriceListResponse.Raw,
    Keet.integrations.aestheticRecords.GetAestheticRecordsProductPriceListResponse
> = core.serialization.object({
    status: ResponseStatus,
    priceList: core.serialization.list(AestheticRecordsProductPrice),
    pagination: AestheticRecordsPagination,
});

export declare namespace GetAestheticRecordsProductPriceListResponse {
    interface Raw {
        status: ResponseStatus.Raw;
        priceList: AestheticRecordsProductPrice.Raw[];
        pagination: AestheticRecordsPagination.Raw;
    }
}

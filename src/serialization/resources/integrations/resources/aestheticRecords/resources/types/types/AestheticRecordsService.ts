/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Keet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";

export const AestheticRecordsService: core.serialization.ObjectSchema<
    serializers.integrations.aestheticRecords.AestheticRecordsService.Raw,
    Keet.integrations.aestheticRecords.AestheticRecordsService
> = core.serialization.object({
    id: core.serialization.number(),
    userId: core.serialization.property("user_id", core.serialization.number()),
    name: core.serialization.string(),
    categoryId: core.serialization.property("category_id", core.serialization.number()),
    isDeviceDependent: core.serialization.property("is_device_dependent", core.serialization.number().optional()),
    isAvailableOnline: core.serialization.property("is_available_online", core.serialization.number().optional()),
    isServiceFree: core.serialization.property("is_service_free", core.serialization.number().optional()),
    isGfeRequired: core.serialization.property("is_gfe_required", core.serialization.number().optional()),
    freeConsultation: core.serialization.property("free_consultation", core.serialization.number().optional()),
    duration: core.serialization.number(),
    customDuration: core.serialization.property("custom_duration", core.serialization.number()),
    description: core.serialization.string(),
    status: core.serialization.number(),
    dateCreated: core.serialization.property("date_created", core.serialization.string()),
    dateModified: core.serialization.property("date_modified", core.serialization.string()),
    orderBy: core.serialization.property("order_by", core.serialization.number()),
    surveyId: core.serialization.property("survey_id", core.serialization.number()),
    addedBy: core.serialization.property("added_by", core.serialization.number()),
    modifiedBy: core.serialization.property("modified_by", core.serialization.number()),
    deletedBy: core.serialization.property("deleted_by", core.serialization.number()),
    deletedOn: core.serialization.property("deleted_on", core.serialization.string()),
    isPrePaymentAccepted: core.serialization.property("is_pre_payment_accepted", core.serialization.number()),
    deposit: core.serialization.number(),
    price: core.serialization.string(),
    serviceType: core.serialization.property("service_type", core.serialization.string()),
    serviceChargeType: core.serialization.property("service_charge_type", core.serialization.string()),
    questionnaireType: core.serialization.property("questionnaire_type", core.serialization.string()),
    mins: core.serialization.number(),
    hours: core.serialization.number(),
});

export declare namespace AestheticRecordsService {
    interface Raw {
        id: number;
        user_id: number;
        name: string;
        category_id: number;
        is_device_dependent?: number | null;
        is_available_online?: number | null;
        is_service_free?: number | null;
        is_gfe_required?: number | null;
        free_consultation?: number | null;
        duration: number;
        custom_duration: number;
        description: string;
        status: number;
        date_created: string;
        date_modified: string;
        order_by: number;
        survey_id: number;
        added_by: number;
        modified_by: number;
        deleted_by: number;
        deleted_on: string;
        is_pre_payment_accepted: number;
        deposit: number;
        price: string;
        service_type: string;
        service_charge_type: string;
        questionnaire_type: string;
        mins: number;
        hours: number;
    }
}

/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Keet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { ResponseStatus } from "../../../../../../common/resources/types/types/ResponseStatus";
import { AestheticRecordsClientGet } from "./AestheticRecordsClientGet";
import { AestheticRecordsPagination } from "./AestheticRecordsPagination";

export const GetAestheticRecordsClientsResponse: core.serialization.ObjectSchema<
    serializers.integrations.aestheticRecords.GetAestheticRecordsClientsResponse.Raw,
    Keet.integrations.aestheticRecords.GetAestheticRecordsClientsResponse
> = core.serialization.object({
    status: ResponseStatus,
    clients: core.serialization.list(AestheticRecordsClientGet),
    pagination: AestheticRecordsPagination,
});

export declare namespace GetAestheticRecordsClientsResponse {
    interface Raw {
        status: ResponseStatus.Raw;
        clients: AestheticRecordsClientGet.Raw[];
        pagination: AestheticRecordsPagination.Raw;
    }
}

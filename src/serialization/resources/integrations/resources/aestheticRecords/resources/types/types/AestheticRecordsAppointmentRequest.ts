/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Keet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";
import { AestheticRecordsAppointmentModality } from "./AestheticRecordsAppointmentModality";
import { AestheticRecordsAppointmentService } from "./AestheticRecordsAppointmentService";
import { AdditionalPaymentInfo } from "./AdditionalPaymentInfo";

export const AestheticRecordsAppointmentRequest: core.serialization.ObjectSchema<
    serializers.integrations.aestheticRecords.AestheticRecordsAppointmentRequest.Raw,
    Keet.integrations.aestheticRecords.AestheticRecordsAppointmentRequest
> = core.serialization.object({
    patientId: core.serialization.number(),
    patientName: core.serialization.string(),
    patientPhone: core.serialization.string(),
    patientEmail: core.serialization.string(),
    clinicId: core.serialization.number(),
    doubleBooking: core.serialization.boolean(),
    patientToBeCharged: core.serialization.number(),
    date: core.serialization.string(),
    time: core.serialization.string(),
    notes: core.serialization.string(),
    typeOfAppointment: AestheticRecordsAppointmentModality,
    outsideScheduledHours: core.serialization.boolean(),
    appointmentService: core.serialization.list(AestheticRecordsAppointmentService),
    duration: core.serialization.number(),
    providerId: core.serialization.number(),
    clearentEmailId: core.serialization.string(),
    clearentZip: core.serialization.string(),
    paymentInfo: AdditionalPaymentInfo,
});

export declare namespace AestheticRecordsAppointmentRequest {
    interface Raw {
        patientId: number;
        patientName: string;
        patientPhone: string;
        patientEmail: string;
        clinicId: number;
        doubleBooking: boolean;
        patientToBeCharged: number;
        date: string;
        time: string;
        notes: string;
        typeOfAppointment: AestheticRecordsAppointmentModality.Raw;
        outsideScheduledHours: boolean;
        appointmentService: AestheticRecordsAppointmentService.Raw[];
        duration: number;
        providerId: number;
        clearentEmailId: string;
        clearentZip: string;
        paymentInfo: AdditionalPaymentInfo.Raw;
    }
}

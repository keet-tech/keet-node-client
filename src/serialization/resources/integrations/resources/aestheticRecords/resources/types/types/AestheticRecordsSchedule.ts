/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../../../../index";
import * as Keet from "../../../../../../../../api/index";
import * as core from "../../../../../../../../core";

export const AestheticRecordsSchedule: core.serialization.ObjectSchema<
    serializers.integrations.aestheticRecords.AestheticRecordsSchedule.Raw,
    Keet.integrations.aestheticRecords.AestheticRecordsSchedule
> = core.serialization.object({
    id: core.serialization.number(),
    providerId: core.serialization.property("provider_id", core.serialization.number()),
    clinicId: core.serialization.property("clinic_id", core.serialization.number()),
    templateName: core.serialization.property("template_name", core.serialization.string().optional()),
    dateScheduled: core.serialization.property("date_scheduled", core.serialization.string()),
    dateScheduledEvent: core.serialization.property("date_scheduled_event", core.serialization.string().optional()),
    fromTime: core.serialization.property("from_time", core.serialization.string()),
    toTime: core.serialization.property("to_time", core.serialization.string()),
    start: core.serialization.string(),
    end: core.serialization.string(),
    scheduleType: core.serialization.property("schedule_type", core.serialization.string().optional()),
    availableFor: core.serialization.property("available_for", core.serialization.string().optional()),
    timezone: core.serialization.string().optional(),
});

export declare namespace AestheticRecordsSchedule {
    export interface Raw {
        id: number;
        provider_id: number;
        clinic_id: number;
        template_name?: string | null;
        date_scheduled: string;
        date_scheduled_event?: string | null;
        from_time: string;
        to_time: string;
        start: string;
        end: string;
        schedule_type?: string | null;
        available_for?: string | null;
        timezone?: string | null;
    }
}

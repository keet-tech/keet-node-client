/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as core from "../../../../core";
import { AestheticRecords } from "../resources/aestheticRecords/client/Client";
import { Vin } from "../resources/vin/client/Client";

export declare namespace Integrations {
    interface Options {
        token: core.Supplier<core.BearerToken>;
    }

    interface RequestOptions {
        /** The maximum time to wait for a response in seconds. */
        timeoutInSeconds?: number;
        /** The number of times to retry the request. Defaults to 2. */
        maxRetries?: number;
        /** A hook to abort the request. */
        abortSignal?: AbortSignal;
    }
}

export class Integrations {
    constructor(protected readonly _options: Integrations.Options) {}

    protected _aestheticRecords: AestheticRecords | undefined;

    public get aestheticRecords(): AestheticRecords {
        return (this._aestheticRecords ??= new AestheticRecords(this._options));
    }

    protected _vin: Vin | undefined;

    public get vin(): Vin {
        return (this._vin ??= new Vin(this._options));
    }
}
